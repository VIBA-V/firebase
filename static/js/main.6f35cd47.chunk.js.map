{"version":3,"sources":["config/FbConfig.js","components/utils/QuesPor.js","config/auth.js","App.js","serviceWorker.js","index.js"],"names":["base","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","formControl","marginBottom","spacing","marginTop","selectEmpty","submit","margin","withRouter","history","classes","React","useState","category","setCategory","ani","document","querySelector","question","option1","option2","option3","option4","answer","ques","setState","updateField","e","preventDefault","target","name","value","db","firestore","console","log","Container","maxWidth","style","padding","Paper","onSubmit","event","elements","collection","doc","add","options","then","alert","reset","catch","error","validate","id","Typography","variant","FormControl","fullWidth","className","InputLabel","Select","labelId","onChange","label","MenuItem","TextField","placeholder","multiline","Button","type","color","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","useEffect","auth","onAuthStateChanged","Provider","App","props","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6f35cd47.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBfLXREW0-cMv9oDTBW2xYFmHQHDlQPHuw\",\r\n  authDomain: \"avasyu-764da.firebaseapp.com\",\r\n  databaseURL: \"https://avasyu-764da.firebaseio.com\",\r\n  projectId: \"avasyu-764da\",\r\n  storageBucket: \"avasyu-764da.appspot.com\",\r\n  messagingSenderId: \"628259589740\",\r\n  appId: \"1:628259589740:web:34de5607eaae745d7ad249\",\r\n  measurementId: \"G-FZ3Q7TFPLD\",\r\n};\r\n// Initialize Firebase\r\nconst base = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default base;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { withRouter } from \"react-router\";\r\nimport base from \"../../config/FbConfig\";\r\nimport \"firebase/firestore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginBottom: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst QuesPor = ({ history }) => {\r\n  const classes = useStyles();\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const ani = document.querySelector(\"#myForm\");\r\n  const handleChange = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n  const [ques, setState] = useState({\r\n    question: \"\",\r\n    option1: \"\",\r\n    option2: \"\",\r\n    option3: \"\",\r\n    option4: \"\",\r\n    answer: \"\",\r\n  });\r\n\r\n  const updateField = (e) => {\r\n    e.preventDefault();\r\n    setState({\r\n      ...ques,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const db = base.firestore();\r\n  const handleData = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      category,\r\n      question,\r\n      option1,\r\n      option2,\r\n      option3,\r\n      option4,\r\n      answer,\r\n    } = event.target.elements;\r\n\r\n    return db\r\n      .collection(\"QuestionTypes\")\r\n      .doc(category.value)\r\n      .collection(\"Questions\")\r\n      .add({\r\n        question: question.value,\r\n        options: [option1.value, option2.value, option3.value, option4.value],\r\n        answer: answer.value,\r\n      })\r\n      .then(() => {\r\n        alert(\"Question Added to database, please refresh the browser\");\r\n        ani.reset();\r\n      })\r\n      .then()\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  };\r\n  console.log(ques);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ padding: \"3vh\" }}>\r\n      <Paper style={{ padding: \"2vh\" }}>\r\n        <form onSubmit={handleData} validate id=\"myForm\">\r\n          <Typography variant=\"h6\" style={{ margin: \"1vh\" }}>\r\n            Category :\r\n          </Typography>\r\n          <FormControl\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            className={classes.formControl}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Category\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              name=\"category\"\r\n              value={category}\r\n              onChange={handleChange}\r\n              label=\"category\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={\"Aptitude\"}>Aptitude</MenuItem>\r\n              <MenuItem value={\"Communication\"}>Communication</MenuItem>\r\n              <MenuItem value={\"English\"}>English</MenuItem>\r\n              <MenuItem value={\"Logical\"}>Logical</MenuItem>\r\n              <MenuItem value={\"Organization\"}>Organization</MenuItem>\r\n              <MenuItem value={\"Collaboration\"}>Collaboration</MenuItem>\r\n              <MenuItem value={\"Content\"}>Content</MenuItem>\r\n              <MenuItem value={\"Analysis\"}>Analysis</MenuItem>\r\n              <MenuItem value={\"Marketing\"}>Marketing</MenuItem>\r\n              <MenuItem value={\"LeaderShip\"}>Leadership</MenuItem>\r\n              <MenuItem value={\"C-lanuage\"}>C-lanuage</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <Typography variant=\"h6\" style={{ margin: \"1vh\" }}>\r\n            Question :\r\n          </Typography>\r\n          <TextField\r\n            id=\"outlined-textarea\"\r\n            fullWidth\r\n            name=\"question\"\r\n            label=\"Question\"\r\n            placeholder=\"enter question here\"\r\n            multiline\r\n            value={ques.question}\r\n            onChange={updateField}\r\n            variant=\"outlined\"\r\n          />\r\n          <Typography variant=\"h6\" style={{ margin: \"1vh\" }}>\r\n            Options :\r\n          </Typography>\r\n          <TextField\r\n            style={{ marginTop: \"1vh\" }}\r\n            id=\"standard-textarea\"\r\n            fullWidth\r\n            name=\"option1\"\r\n            label=\"Option 1\"\r\n            placeholder=\"enter Option here\"\r\n            multiline\r\n            value={ques.option1}\r\n            onChange={updateField}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            style={{ marginTop: \"2vh\" }}\r\n            id=\"standard-textarea\"\r\n            fullWidth\r\n            name=\"option2\"\r\n            label=\"Option 2\"\r\n            placeholder=\"enter Option here\"\r\n            multiline\r\n            value={ques.option2}\r\n            onChange={updateField}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            style={{ marginTop: \"2vh\" }}\r\n            id=\"standard-textarea\"\r\n            fullWidth\r\n            name=\"option3\"\r\n            label=\"Option 3\"\r\n            placeholder=\"enter Option here\"\r\n            multiline\r\n            value={ques.option3}\r\n            onChange={updateField}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            style={{ marginTop: \"2vh\" }}\r\n            id=\"standard-textarea\"\r\n            fullWidth\r\n            name=\"option4\"\r\n            label=\"Option 4\"\r\n            placeholder=\"enter Option here\"\r\n            multiline\r\n            value={ques.option4}\r\n            onChange={updateField}\r\n            variant=\"outlined\"\r\n          />\r\n          <Typography variant=\"h6\" style={{ margin: \"2vh\" }}>\r\n            Answer :\r\n          </Typography>\r\n          <TextField\r\n            style={{ marginTop: \"0vh\" }}\r\n            id=\"standard-textarea\"\r\n            fullWidth\r\n            name=\"answer\"\r\n            label=\"Answer\"\r\n            placeholder=\"enter Answer here\"\r\n            multiline\r\n            value={ques.answer}\r\n            onChange={updateField}\r\n            variant=\"outlined\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Add Question\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\nexport default withRouter(QuesPor);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport base from \"./FbConfig\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  useEffect(() => {\r\n    base.auth().onAuthStateChanged(setCurrentUser);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport QuesPor from \"./components/utils/QuesPor\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { AuthProvider } from \"./config/auth\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AuthProvider>\r\n        <Router>\r\n          <div>\r\n            <QuesPor />\r\n          </div>\r\n        </Router>\r\n      </AuthProvider>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}